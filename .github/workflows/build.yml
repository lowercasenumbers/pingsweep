name: CI Build pingsweep

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    paths: # Only run if relevant files change
      - 'pingsweep.go'
      - 'go.mod'       # Include go.mod in paths even if go.sum isn't used
      - 'Makefile'
  pull_request:
    branches:
      - main # Also trigger on pull requests targeting main
    paths: # Only run if relevant files change
      - 'pingsweep.go'
      - 'go.mod'
      - 'Makefile'

jobs:
  build:
    # Use a matrix strategy to build for multiple OS/architectures
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goarch: [amd64] # You can add arm64 here if needed for specific OS
      fail-fast: false # Don't stop other builds if one fails

    runs-on: ${{ matrix.os }}

    steps:
      # Action to check out your repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Action to set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          # Disable Go module caching explicitly since go.sum does not exist (no external dependencies)
          cache: false

      # Ensures go.mod is up-to-date.
      # go mod tidy will not create go.sum if only standard library imports are used.
      - name: Go Mod Tidy
        run: go mod tidy

      # Build pingsweep binary for the current OS/architecture
      - name: Build pingsweep binary
        run: go build -o pingsweep-${{ runner.os }}-${{ matrix.goarch }} pingsweep.go

      # Upload the built binary as a workflow artifact
      - name: Upload pingsweep binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pingsweep-${{ runner.os }}-${{ matrix.goarch }}
          path: pingsweep-${{ runner.os }}-${{ matrix.goarch }}${{ runner.os == 'Windows' && '.exe' || '' }}
          retention-days: 5

